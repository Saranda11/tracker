version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: expense-tracker
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - expense-tracker-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Main Application (Backend + Frontend)
  app:
    build: .
    container_name: expense-tracker-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://root:rootpassword@mongodb:27017/expense-tracker?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production-make-it-long-and-random
      CORS_ORIGIN: http://localhost:3000
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000" # Frontend
      - "5000:5000" # Backend API
    volumes:
      - app_uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - expense-tracker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: expense-tracker-db-admin
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://root:rootpassword@mongodb:27017/
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - expense-tracker-network

volumes:
  mongodb_data:
    driver: local
  app_uploads:
    driver: local

networks:
  expense-tracker-network:
    driver: bridge
